name: "publish-image"
description: "Composite action to publish trestle-bot images."

inputs:
  image:
    required: true
    description: The image repository location in the format of registry/name/app
  release_version:
    required: true
    description: The version to build type semver tags from
  git_ref:
    required: true
    description: The git reference to build image from
  no_cache:
    description: Skip using cache when building the image.
    required: false
    default: "false"
outputs:
  image_sha:
    value: ${{ inputs.image }}@${{ steps.build-and-push.outputs.digest }}
    description: The published image with digest

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Set up cosign
      uses: sigstore/cosign-installer@v3.4.0

    # Tags are defined here based on workflow triggers
    - name: Define metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.image }}
        tags: |
          type=semver,pattern=v{{major}},enable=${{ !startsWith(inputs.release_version, 'v0.') }},value=${{ inputs.release_version }}
          type=semver,pattern=v{{major}}.{{minor}},value=${{ inputs.release_version }}
          type=semver,pattern=v{{version}},value=${{ inputs.release_version }}
          type=raw,value=${{ inputs.release_version }}-{{branch}}-{{sha}},event=workflow_dispatch
          type=schedule,pattern={{date 'YYYYMMDD'}},prefix=${{ inputs.release_version }}.
        flavor: |
          latest=false
    
    - name: Build and export to Docker
      uses: docker/build-push-action@v5
      id: build-and-export
      with:
        context: "${{ github.server_url }}/${{ github.repository }}.git#${{ inputs.git_ref }}"
        load: true
        no-cache: ${{ inputs.no_cache == 'true' }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Pre-push Image Scan
      uses: aquasecurity/trivy-action@0.19.0
      with:
        image-ref: ${{ inputs.image }}:${{ steps.meta.outputs.version }}
        exit-code: 1
        skip-files:  "**/.venv/lib/**/METADATA"
        scanners: secret
        severity: HIGH,CRITICAL,MEDIUM

    # Does not rebuild. Uses internal cache from previous step.
    - name: Build and Push
      uses: docker/build-push-action@v5
      id: build-and-push
      with:
        context: "${{ github.server_url }}/${{ github.repository }}.git#${{ inputs.git_ref }}"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    
    - name: Sign the image with GitHub OIDC Token
      run: cosign sign --yes "$IMAGE@$DIGEST"
      env:
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
        IMAGE: ${{ inputs.image }}
      shell: bash

    - name: Verify image
      run: |
        cosign verify "$IMAGE@$DIGEST" --certificate-identity-regexp="$SUBJECT" \
        --certificate-oidc-issuer=https://token.actions.githubusercontent.com
      env:
        SUBJECT: https://github\.com/${{ github.repository_owner }}/trestle-bot/\.github/.+
        IMAGE: ${{ inputs.image }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      shell: bash
